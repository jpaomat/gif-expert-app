{"version":3,"sources":["components/AddCategory/AddCategory.js","services/getGifs.js","components/GifGridItem/GifGridItem.js","components/GifGrid/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","ctgs","type","value","onChange","target","getGifs","category","a","urlGifApi","encodeURI","fetch","response","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","gifsList","imgData","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"kRAMaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,mCACI,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACpCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAfU,SAACP,GAAD,OAAOF,EAAcE,EAAEQ,OAAOF,e,+BCR/CG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,qDAE6CC,UAAUH,GAFvD,6BACJ,oCADI,SAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIIA,EAASC,OAJb,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBF,QATvB,kBAYZL,GAZY,4CAAH,sDCEPQ,G,MAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,IAAKD,EAAW,EAAXA,MAC9B,OACI,qBAAKK,UAAU,wBAAf,SACI,qBACIC,IAAKL,EACLM,IAAKP,QCFRQ,G,MAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAStB,ECZwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACNzB,EAAQC,GAAUyB,MAAK,SAAAC,GACnBH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGlB,CAACrB,IAEGsB,EDH0BK,CAAa3B,GAAlC4B,EAAZ,EAAOrB,KAAec,EAAtB,EAAsBA,QAEtB,OACI,qCACI,6BAAKrB,IACJqB,GAAW,cACZ,sBAAKJ,UAAU,YAAf,UAEQW,EAASnB,KAAI,SAAAoB,GAAO,OAChB,cAAC,EAAD,eAEQA,GADCA,EAAQlB,OAKzB,+BE1BHmB,EAAe,WACxB,MAAoC5C,mBAAS,CAAC,cAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ8C,EAAWtB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCXjCgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.22f6f6df.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './AddCategory.css';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => setInputValue(e.target.value);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(ctgs=>[inputValue, ...ctgs]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                ></input>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n    const apiKey = 'BKd3xgipbe7I4beXOmy4YLGSiQPnn198';\r\n    const urlGifApi = `https://api.giphy.com/v1/stickers/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\r\n    const response = await fetch(urlGifApi);\r\n    const { data } = await response.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifs;\r\n};","import React from 'react';\r\nimport './GifGridItem.css';\r\n\r\nexport const GifGridItem = ({url, title}) => {\r\n    return (\r\n        <div className='card animate__fadeOut'>\r\n            <img\r\n                src={url}\r\n                alt={title}\r\n            ></img>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useFetchGifs } from '../../hooks/useFetchGifs';\r\nimport { getGifs } from '../../services/getGifs';\r\nimport { GifGridItem } from '../GifGridItem/GifGridItem';\r\nimport './GifGrid.css';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // PRIMER FORMA DE HACERLO\r\n    // const [gifsList, setGifsList] = useState([]);\r\n    // useEffect(() => {\r\n    //     getGifs(category).then(setGifsList); // como devuelve un solo argumento se puede llamar así\r\n    // }, [category])\r\n\r\n    // ALTERNATIVA PARA QUE QUEDE ORDENADO Y MAS LIMPIO EL COMPONENTE\r\n    const {data:gifsList, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && 'Cargando...'}\r\n            <div className='card-grid'>\r\n                {\r\n                    gifsList.map(imgData => (\r\n                        <GifGridItem\r\n                            key={imgData.id}\r\n                            {...imgData}\r\n                        />\r\n                    ))\r\n                }\r\n                <br></br>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../services/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            })\r\n        }); // como devuelve un solo argumento se puede llamar así\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from '../components/AddCategory/AddCategory';\r\nimport { GifGrid } from '../components/GifGrid/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert App</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr></hr>\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp/GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}